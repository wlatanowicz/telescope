imports:
    - { resource: parameters.yml }
    - { resource: services.yml }
    - { resource: routines.yml }
    - { resource: commands.yml }
    - { resource: controllers.yml }
    - { resource: hardware/cameras.yml }
    - { resource: hardware/focusers.yml }
    - { resource: hardware/imagick-cameras.yml }
    - { resource: hardware/radios.yml }
    - { resource: hardware/telescopes.yml }

framework:
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: true
    profiler: { only_exceptions: false }

services:
    logger-with-context.prototype:
        class: wlatanowicz\AppBundle\Helper\LoggerWithContext
        arguments:
            - '@logger'
            - {}

    monolog.ansi:
        class: Bramus\Ansi\Ansi
        arguments:
            - "@monolog.ansi.writer"

    monolog.ansi.writer:
        class: Bramus\Ansi\Writers\BufferWriter

    monolog.formatter.inner:
        class: Bramus\Monolog\Formatter\ColoredLineFormatter
        arguments:
            - '@monolog.formatter.color-scheme'
            - "%%message%%\n"

    monolog.formatter.color-scheme:
        class: wlatanowicz\AppBundle\Helper\LoggerColorScheme

    monolog.formatter.custom:
        class: wlatanowicz\AppBundle\Helper\LogFormatter
        arguments:
            - "[%%datetime%%] [%%context.display%%]: "
            - '@monolog.ansi'
            - '@monolog.formatter.inner'

    monolog.processor.psr:
        class: Monolog\Processor\PsrLogMessageProcessor
        tags:
            - { name: monolog.processor }

    monolog.processor.tag:
        class: Monolog\Processor\TagProcessor
        tags:
            - { name: monolog.processor }


monolog:
    handlers:
        main:
            type:  stream
            path:  "%kernel.logs_dir%/%kernel.environment%.log"
            level: warning
        console:
            type:   console
            verbosity_levels:
                VERBOSITY_NORMAL: INFO
            formatter: monolog.formatter.custom
